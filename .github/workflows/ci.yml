name: Minecraft Mod CI/CD

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch: # allows manual runs

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Clean build
        run: bash ./gradlew clean build -x test

      - name: Generate sources JAR
        run: bash ./gradlew sourcesJar

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: minecraft-mod-build
          path: build/libs/*

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch' # only run when manually triggered

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: minecraft-mod-build
          path: build/libs

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "Release Build ${{ github.run_number }}"
          tag_name: "release-${{ github.run_number }}"
          body: "Automated release build from commit ${{ github.sha }}"
          files: build/libs/*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload to Modrinth
        uses: Kir-Antipov/mc-publish@v3
        with:
          modrinth-id: ${{ secrets.MODRINTH_PROJECT_ID }}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          files: build/libs/*.jar
          name: "Release Build ${{ github.run_number }}"
          version: "release-${{ github.run_number }}"
          changelog: "Release build from commit ${{ github.sha }}"
          version-type: release

      - name: Upload to CurseForge
        uses: Kir-Antipov/mc-publish@v3
        with:
          curseforge-id: ${{ secrets.CURSEFORGE_PROJECT_ID }}
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}
          files: build/libs/*.jar
          name: "Release Build ${{ github.run_number }}"
          version: "release-${{ github.run_number }}"
          changelog: "Release build from commit ${{ github.sha }}"
          version-type: release

